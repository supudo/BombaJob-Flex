<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		skinClass="skins.BJSkin"
		title="Categories"
		actionBarVisible="false"
		creationComplete="categoriesView_creationCompleteHandler(event)"
		updateComplete="categoriesView_updateCompleteHandler(event)">
	
	<s:layout>
		<s:VerticalLayout gap="0"/>
	</s:layout>
	
	<fx:Metadata>
		[ResourceBundle("resources")]
	</fx:Metadata> 
	
	<fx:Script>
		<![CDATA[
			import database.Database;
			import database.DatabaseResponder;
			
			import models.CategoryModel;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			import spark.events.ViewNavigatorEvent;
			
			import utilities.AppSettings;
			import utilities.Funcs;
			
			private var dbHelper:Database;
			
			[Bindable]
			private var itemsModel:CategoryModel;

			protected function categoriesView_creationCompleteHandler(event:FlexEvent):void {
				this.title = resourceManager.getString('resources','menu_Categories');
				this.addEventListener("syncComplete", loadItems);
			}

			protected function categoriesView_updateCompleteHandler(event:FlexEvent):void {
				this.loadItems(null);
			}

			public function loadItems(event:Event):void {
				this.itemsModel = CategoryModel.getInstance();
				this.dbHelper = AppSettings.getInstance().dbHelper;
				var ents:Array = this.dbHelper.getCategories();
				
				if (ents != null) {
					var f:Funcs = new Funcs();
					
					if (this.itemsModel.items == null) {
						this.itemsModel.items = new ArrayCollection();
						var ent:Object, obj:Object;
						var today:Date = new Date();
						for (var i:int=0; i<ents.length; i++)
							this.itemsModel.items.addItem(ents[i]);
					}
				}
			}
			
			protected function listCategories_changeHandler(event:IndexChangeEvent):void {
				navigator.pushView(OffersView, this.listCategories.selectedItem);
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:List  id="listCategories" width="100%" height="100%" dataProvider="{itemsModel.items}"
			 alternatingItemColors="[0xE3E3E3, 0xEBEBEC]"
			 change="listCategories_changeHandler(event)"
			 labelField="title" />
	
</s:View>
