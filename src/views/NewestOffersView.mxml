<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		skinClass="skins.BJSkin"
		title="Newest Offers"
		creationComplete="view_creationCompleteHandler(event)">

	<s:layout>
		<s:VerticalLayout gap="0"/>
	</s:layout>

	<fx:Metadata>
		[ResourceBundle("resources")]
	</fx:Metadata> 

	<fx:Script>
		<![CDATA[
			import database.Database;
			import database.DatabaseResponder;
			
			import flash.utils.getTimer;
			
			import models.JobOfferModel;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			
			import utilities.AppSettings;
			import utilities.Funcs;
			private var dbHelper:Database;
			
			[Bindable]
			private var offersModel:JobOfferModel;
			
			protected function view_creationCompleteHandler(event:FlexEvent):void {
				this.title = resourceManager.getString('resources','menu_NewestOffers');
				
				this.offersModel = JobOfferModel.getInstance();

				this.dbHelper = new Database();
				this.dbHelper.init(new DatabaseResponder());
				var offs:Array = this.dbHelper.getJobOffers();
				
				var f:Funcs = new Funcs();
				
				if (this.offersModel.items == null) {
					this.offersModel.items = new ArrayCollection();
					var off:Object, obj:Object;
					var today:Date = new Date();
					for (var i:int=0; i<offs.length; i++) {
						off = offs[i];
						obj = new Object();
						obj.oid = off.oid;
						var title:String = f.getListDate(off.publishdate as Date, today, false) + " // ";
						title += off.title;
						obj.title = title;
						obj.subtitle = off.categorytitle;
						obj.humanyn = off.humanyn;
						this.offersModel.items.addItem(obj);
					}
				}
			}
		]]>
	</fx:Script>
	
	<fx:Style>
		.nofItem { fontStyle: italic; color: #DF9368; }
	</fx:Style>

	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:List  id="listNewestOffers" width="100%" height="100%" dataProvider="{offersModel.items}"
			 alternatingItemColors="[0xE3E3E3, 0xEBEBEC]">
		<s:itemRenderer>
			<fx:Component>
				<s:IconItemRenderer labelField="title" messageField="subtitle"
									iconFunction="getIcon" iconHeight="21" iconWidth="35"
									messageStyleName="nofItem">
					<fx:Script>
						<![CDATA[
							[Embed(source = "assets/images/iconperson.png")]
							public var iconPerson:Class;
							
							[Embed(source = "assets/images/iconcompany.png")]
							public var iconCompany:Class;

							private function getIcon(item:Object):Class {
								return item.humanyn ? iconPerson : iconCompany;   
							}
						]]>
					</fx:Script>
				</s:IconItemRenderer>
			</fx:Component>
		</s:itemRenderer>
	</s:List>

</s:View>
