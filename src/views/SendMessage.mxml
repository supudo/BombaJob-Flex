<?xml version="1.0" encoding="utf-8"?>
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark"
		skinClass="skins.BJSkin"
		title="Send Message"
		viewActivate="post_viewActivateHandler(event)">
	
	<fx:Metadata>
		[ResourceBundle("resources")]
	</fx:Metadata> 
	
	<fx:Script>
		<![CDATA[
			import events.DataEvent;
			
			import spark.events.IndexChangeEvent;
			import spark.events.PopUpEvent;
			import spark.events.ViewNavigatorEvent;
			
			import utilities.AppSettings;
			import utilities.Funcs;
			import utilities.Synchronization;
			
			protected var _sync:Synchronization;
			private var oid:uint = 0;
			
			private var _alert:AlertMsgSendMessage = new AlertMsgSendMessage();
			
			protected function post_viewActivateHandler(event:ViewNavigatorEvent):void {
				this.title = resourceManager.getString('resources','send_messageLong');
				this.lblMessage.text = resourceManager.getString('resources','your_message');
				this.btnPost.label = resourceManager.getString('resources','send_message');
				if (data != null)
					this.oid = data.oid;
			}
			
			protected function btnPost_clickHandler(event:MouseEvent):void {
				var off:Object = {};
				off.msg = this.txtMessage.text;
				
				var errorMessage:String = "";
				if (off.msg == "")
					errorMessage = resourceManager.getString('resources','message_error');
				
				if (errorMessage != "") {
					this._alert.open(this, true);
					this._alert.removeEventListener("alertOK_clickHandler", alertOK_clickHandler);
					this._alert.alertPostTitleWindow.title = resourceManager.getString('resources','message_title');
					this._alert.alertPostText.text = errorMessage;
					this._alert.move(((this.width / 2) - (_alert.width / 2)), ((this.height / 2) - (_alert.height / 2)));
				}
				else {
					this._sync = new Synchronization(null);
					this._sync.addEventListener("sendMessageFinished", sendMessageFinished);
					this._sync.dbHelper = AppSettings.getInstance().dbHelper;
					this._sync.postOfferMessage(this.oid, off);
				}
			}
			
			public function sendMessageFinished(event:Event):void {
				AppSettings.getInstance().logThis(null, "Send message finished ... ");

				this.removeEventListener("sendMessageFinished", sendMessageFinished);
				this.txtMessage.text = "";
				
				this._alert.open(this, true);
				this._alert.addEventListener("alertOK_clickHandler", alertOK_clickHandler);
				this._alert.alertPostTitleWindow.title = resourceManager.getString('resources','message_title');
				this._alert.alertPostText.text = resourceManager.getString('resources','message_sent');
				this._alert.move(((this.width / 2) - (_alert.width / 2)), ((this.height / 2) - (_alert.height / 2)));
			}
			
			protected function alertOK_clickHandler(event:Event):void {
				this._alert.close();
				navigator.popView();
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<fx:Component className="AlertMsgSendMessage">
			<s:SkinnablePopUpContainer x="0" y="0">
				<fx:Script>
					<![CDATA[
						import flash.events.Event;
						
						protected function alertOK_clickHandler(event:Event):void {
							this.dispatchEvent(new Event("alertOK_clickHandler", true));
						}
					]]>
				</fx:Script>
				<s:TitleWindow id="alertPostTitleWindow" title="" close="close()" styleName="Alert">
					<s:VGroup horizontalAlign="center" verticalAlign="middle" paddingTop="8" paddingBottom="8" paddingLeft="8" paddingRight="8" gap="5" width="100%">
						<s:Label id="alertPostText" text="No results!"/>
						<s:Button id="alertPostOK" label="OK" click="alertOK_clickHandler(event)"/>
					</s:VGroup>
				</s:TitleWindow>
			</s:SkinnablePopUpContainer>
		</fx:Component>
	</fx:Declarations>
	
	<s:Scroller height="100%" width="100%">
		<s:VGroup gap="10" paddingBottom="4" paddingTop="4" paddingLeft="4" paddingRight="4" width="100%" height="100%">
			<s:Spacer height="10" />
			<s:Label id="lblMessage" text="Your message..." />
			<s:TextArea id="txtMessage" width="100%" height="300" />
			<s:Spacer height="10" />
			<s:HGroup horizontalAlign="center" width="100%">
				<s:Button id="btnPost" label="Boom..." skinClass="skins.BoomButtonSkin" click="btnPost_clickHandler(event)" />
			</s:HGroup>
		</s:VGroup>
	</s:Scroller>
	
</s:View>
